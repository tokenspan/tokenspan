services:
  server:
    build:
      context: .
      target: runtime
    ports:
      - 8080:8080
    env_file:
      - .env
#  mongo1:
#    image: mongo:5
#    container_name: mongo1
#    command: [ "--replSet", "local-replica-set", "--bind_ip_all", "--port", "30001" ]
#    volumes:
#      - ./db-data/mongo-1:/data/db
#    ports:
#      - "30001:30001"
#    healthcheck:
#      test: test $$(echo "rs.initiate({_id:'local-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
#      interval: 10s
#      start_period: 30s
#  mongo2:
#    image: mongo:5
#    container_name: mongo2
#    command: [ "--replSet", "local-replica-set", "--bind_ip_all", "--port", "30002" ]
#    volumes:
#      - ./db-data/mongo-2:/data/db
#    ports:
#      - "30002:30002"
#  mongo3:
#    image: mongo:5
#    container_name: mongo3
#    command: [ "--replSet", "local-replica-set", "--bind_ip_all", "--port", "30003" ]
#    volumes:
#      - ./db-data/mongo-3:/data/db
#    ports:
#      - "30003:30003"