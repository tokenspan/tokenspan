datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "cargo prisma"
  output   = "../src/prisma/db.rs"
}

enum Role {
  Admin
  User
}

model User {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  email              String             @unique
  password           String
  salt               String
  username           String             @unique
  role               Role               @default(User)
  phone              String?
  avatar             String?
  apiKeys            ApiKey[]
  views              View[]
  executionHistories ExecutionHistory[]
  tasks              Task[]
  taskVersions       TaskVersion[]
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt

  @@map("users")
}

enum ChatRole {
  System
  User
  Assistant
  Tool
}

model Provider {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  models    Model[]
  apiKeys   ApiKey[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("providers")
}

model Model {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  provider    Provider    @relation(fields: [providerId], references: [id])
  providerId  String      @db.ObjectId
  name        String      @unique
  description String
  context     Int
  pricing     String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  parameters  Parameter[]

  @@map("models")
}

enum ParameterStatus {
  Draft
  Published
  Archived
}

model Parameter {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  model            Model           @relation(fields: [modelId], references: [id])
  modelId          String          @db.ObjectId
  name             String
  temperature      Float
  maxTokens        Int
  stopSequences    String[]
  topP             Float
  frequencyPenalty Float
  presencePenalty  Float
  status           ParameterStatus @default(Draft)
  extra            Json?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt

  @@map("parameters")
}

enum TaskStatus {
  Draft
  Published
  Archived
}

model Task {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  owner        User          @relation(fields: [ownerId], references: [id])
  ownerId      String        @db.ObjectId
  name         String
  slug         String
  private      Boolean       @default(false)
  taskVersions TaskVersion[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("tasks")
}

model TaskVersion {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  owner              User               @relation(fields: [ownerId], references: [id])
  ownerId            String             @db.ObjectId
  task               Task               @relation(fields: [taskId], references: [id])
  taskId             String             @db.ObjectId
  version            String
  releaseNote        String?
  description        String?
  document           String?
  parameters         Json[]             @default([])
  messages           Json[]             @default([])
  status             TaskStatus         @default(Draft)
  executionHistories ExecutionHistory[]
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt

  @@map("task_versions")
}

enum ExecutionStatus {
  Pending
  Running
  Completed
  Failed
}

enum Endpoint {
  Studio
  Sanbox
  API
}

model ExecutionHistory {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  taskVersion   TaskVersion     @relation(fields: [taskVersionId], references: [id])
  taskVersionId String          @db.ObjectId
  executedBy    User            @relation(fields: [executedById], references: [id])
  executedById  String          @db.ObjectId
  endpoint      Endpoint
  elapsedMs     Int
  status        ExecutionStatus
  messages      Json[]
  parameter     Json
  output        Json?
  error         Json?
  usage         Json?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  @@map("execution_histories")
}

model ApiKey {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  provider   Provider @relation(fields: [providerId], references: [id])
  providerId String   @db.ObjectId
  name       String
  key        String
  owner      User     @relation(fields: [ownerId], references: [id])
  ownerId    String   @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("api_keys")
}

model View {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String   @db.ObjectId
  name      String
  config    Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("views")
}
