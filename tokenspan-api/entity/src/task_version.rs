//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use super::sea_orm_active_enums::TaskVersionStatus;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "task_version")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub task_id: Uuid,
    pub owner_id: Uuid,
    pub semver: String,
    pub version: i32,
    pub description: Option<String>,
    pub release_note: Option<String>,
    pub document: Option<String>,
    pub status: TaskVersionStatus,
    pub messages: Json,
    pub parameters: Json,
    pub released_at: Option<DateTime>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::execution::Entity")]
    Execution,
}

impl Related<super::execution::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Execution.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
